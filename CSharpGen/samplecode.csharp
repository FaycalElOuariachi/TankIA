# generation of CSharp

Génération de 
 P0sachant= [0.009999999776482582, 0.9900000095367432];
 P1sachant0= [[0.05000000074505806, 0.949999988079071], [0.009999999776482582, 0.9900000095367432]];
 P2sachant1_4= [[[1.0, 0.0], [1.0, 0.0]], [[1.0, 0.0], [0.0, 1.0]]];
 P3sachant2= [[0.9800000190734863, 0.019999999552965164], [0.05000000074505806, 0.949999988079071]];
 P4sachant5= [[0.10000000149011612, 0.8999999761581421], [0.009999999776482582, 0.9900000095367432]];
 P5sachant= [0.5, 0.5];
 P6sachant5= [[0.6000000238418579, 0.4000000059604645], [0.30000001192092896, 0.699999988079071]];
 P7sachant6_2= [[[0.8999999761581421, 0.10000000149011612], [0.699999988079071, 0.30000001192092896]], [[0.800000011920929, 0.20000000298023224], [0.10000000149011612, 0.8999999761581421]]];
# CPO TRXTBH [2, 3] 1.0
Creation de potentiel TRXTBH (vars=[2, 3],fill=1.0)
# CPO FCPPAV [2, 6, 7] 1.0
Creation de potentiel FCPPAV (vars=[2, 6, 7],fill=1.0)
# CPO QUIBFX [0, 1] 1.0
Creation de potentiel QUIBFX (vars=[0, 1],fill=1.0)
# CPO HWIALF [1, 2, 4] 1.0
Creation de potentiel HWIALF (vars=[1, 2, 4],fill=1.0)
# CPO JDMAEU [2, 5, 6] 1.0
Creation de potentiel JDMAEU (vars=[2, 5, 6],fill=1.0)
# CPO MVTHNR [2, 4, 5] 1.0
Creation de potentiel MVTHNR (vars=[2, 4, 5],fill=1.0)
# MUC QUIBFX 0 [0, 1]
Multiplication du potentiel QUIBFX par la cpt de la variable 0
# MUC QUIBFX 1 [0, 1]
Multiplication du potentiel QUIBFX par la cpt de la variable 1
# MUC HWIALF 2 [1, 2, 4]
Multiplication du potentiel HWIALF par la cpt de la variable 2
# MUC TRXTBH 3 [2, 3]
Multiplication du potentiel TRXTBH par la cpt de la variable 3
# MUC MVTHNR 4 [2, 4, 5]
Multiplication du potentiel MVTHNR par la cpt de la variable 4
# MUC JDMAEU 5 [2, 5, 6]
Multiplication du potentiel JDMAEU par la cpt de la variable 5
# MUC JDMAEU 6 [2, 5, 6]
Multiplication du potentiel JDMAEU par la cpt de la variable 6
# MUC FCPPAV 7 [2, 6, 7]
Multiplication du potentiel FCPPAV par la cpt de la variable 7
# ASE smoking? EV_5 0 evs.get([5, 'smoking?'][1])
Add soft evidence smoking? in EV_5'index:0,value=evs.get([5, 'smoking?'][1]))
# ASE positive_XraY? EV_3 0 evs.get([3, 'positive_XraY?'][1])
Add soft evidence positive_XraY? in EV_3'index:0,value=evs.get([3, 'positive_XraY?'][1]))
# ASE visit_to_Asia? EV_0 0 evs.get([0, 'visit_to_Asia?'][1])
Add soft evidence visit_to_Asia? in EV_0'index:0,value=evs.get([0, 'visit_to_Asia?'][1]))
# ASE dyspnoea? EV_7 0 evs.get([7, 'dyspnoea?'][1])
Add soft evidence dyspnoea? in EV_7'index:0,value=evs.get([7, 'dyspnoea?'][1]))
# MUL QUIBFX EV_0 [0, 1] ['0']
Multiplication du potentiel QUIBFX par le potentiel EV_0
# MUL TRXTBH EV_3 [2, 3] ['3']
Multiplication du potentiel TRXTBH par le potentiel EV_3
# MUL JDMAEU EV_5 [2, 5, 6] ['5']
Multiplication du potentiel JDMAEU par le potentiel EV_5
# MUL FCPPAV EV_7 [2, 6, 7] ['7']
Multiplication du potentiel FCPPAV par le potentiel EV_7
# CPO XAKXFL [2, 5, 6] 1.0
Creation de potentiel XAKXFL (vars=[2, 5, 6],fill=1.0)
# MUL XAKXFL JDMAEU [2, 5, 6] [2, 5, 6]
Multiplication du potentiel XAKXFL par le potentiel JDMAEU
# CPO IFVUXZ [2, 4, 5] 1.0
Creation de potentiel IFVUXZ (vars=[2, 4, 5],fill=1.0)
# MUL IFVUXZ MVTHNR [2, 4, 5] [2, 4, 5]
Multiplication du potentiel IFVUXZ par le potentiel MVTHNR
# CPO JZGJUB [2, 4, 5] 1.0
Creation de potentiel JZGJUB (vars=[2, 4, 5],fill=1.0)
# MUL JZGJUB MVTHNR [2, 4, 5] [2, 4, 5]
Multiplication du potentiel JZGJUB par le potentiel MVTHNR
# CPO IPEKWS [1, 2, 4] 1.0
Creation de potentiel IPEKWS (vars=[1, 2, 4],fill=1.0)
# MUL IPEKWS HWIALF [1, 2, 4] [1, 2, 4]
Multiplication du potentiel IPEKWS par le potentiel HWIALF
# CPO ZLCECG [2, 6] 0.0
Creation de potentiel ZLCECG (vars=[2, 6],fill=0.0)
# MAR ZLCECG FCPPAV [2, 6] [2, 6, 7]
Marginalisation de ZLCECG par FCPPAV
# MUL JDMAEU ZLCECG [2, 5, 6] [2, 6]
Multiplication du potentiel JDMAEU par le potentiel ZLCECG
# CPO KNMSKT [1] 0.0
Creation de potentiel KNMSKT (vars=[1],fill=0.0)
# MAR KNMSKT QUIBFX [1] [0, 1]
Marginalisation de KNMSKT par QUIBFX
# MUL HWIALF KNMSKT [1, 2, 4] [1]
Multiplication du potentiel HWIALF par le potentiel KNMSKT
# CPO KIKCCO [2, 4] 0.0
Creation de potentiel KIKCCO (vars=[2, 4],fill=0.0)
# MAR KIKCCO HWIALF [2, 4] [1, 2, 4]
Marginalisation de KIKCCO par HWIALF
# MUL MVTHNR KIKCCO [2, 4, 5] [2, 4]
Multiplication du potentiel MVTHNR par le potentiel KIKCCO
# CPO KVWKZF [2, 5] 0.0
Creation de potentiel KVWKZF (vars=[2, 5],fill=0.0)
# MAR KVWKZF MVTHNR [2, 5] [2, 4, 5]
Marginalisation de KVWKZF par MVTHNR
# MUL JDMAEU KVWKZF [2, 5, 6] [2, 5]
Multiplication du potentiel JDMAEU par le potentiel KVWKZF
# CPO ZXLINC [2] 0.0
Creation de potentiel ZXLINC (vars=[2],fill=0.0)
# MAR ZXLINC TRXTBH [2] [2, 3]
Marginalisation de ZXLINC par TRXTBH
# MUL JDMAEU ZXLINC [2, 5, 6] [2]
Multiplication du potentiel JDMAEU par le potentiel ZXLINC
# MUL XAKXFL ZLCECG [2, 5, 6] [2, 6]
Multiplication du potentiel XAKXFL par le potentiel ZLCECG
# MUL XAKXFL ZXLINC [2, 5, 6] [2]
Multiplication du potentiel XAKXFL par le potentiel ZXLINC
# CPO NBUOFU [2, 5] 0.0
Creation de potentiel NBUOFU (vars=[2, 5],fill=0.0)
# MAR NBUOFU XAKXFL [2, 5] [2, 5, 6]
Marginalisation de NBUOFU par XAKXFL
# MUL IFVUXZ NBUOFU [2, 4, 5] [2, 5]
Multiplication du potentiel IFVUXZ par le potentiel NBUOFU
# CPO ZMUCOI [2, 4] 0.0
Creation de potentiel ZMUCOI (vars=[2, 4],fill=0.0)
# MAR ZMUCOI IFVUXZ [2, 4] [2, 4, 5]
Marginalisation de ZMUCOI par IFVUXZ
# MUL JZGJUB KIKCCO [2, 4, 5] [2, 4]
Multiplication du potentiel JZGJUB par le potentiel KIKCCO
# MUL JZGJUB NBUOFU [2, 4, 5] [2, 5]
Multiplication du potentiel JZGJUB par le potentiel NBUOFU
# MUL IPEKWS ZMUCOI [1, 2, 4] [2, 4]
Multiplication du potentiel IPEKWS par le potentiel ZMUCOI
# MUL IPEKWS KNMSKT [1, 2, 4] [1]
Multiplication du potentiel IPEKWS par le potentiel KNMSKT
# CPO P_6 ['6'] 0.0
Creation de potentiel P_6 (vars=['6'],fill=0.0)
# MAR P_6 JDMAEU [6] [2, 5, 6]
Marginalisation de P_6 par JDMAEU
# NOR P_6 bronchitis?
Normalisation de bronchitis? on P_6
# CPO P_4 ['4'] 0.0
Creation de potentiel P_4 (vars=['4'],fill=0.0)
# MAR P_4 JZGJUB [4] [2, 4, 5]
Marginalisation de P_4 par JZGJUB
# NOR P_4 lung_cancer?
Normalisation de lung_cancer? on P_4
# CPO P_1 ['1'] 0.0
Creation de potentiel P_1 (vars=['1'],fill=0.0)
# MAR P_1 IPEKWS [1] [1, 2, 4]
Marginalisation de P_1 par IPEKWS
# NOR P_1 tuberculosis?
Normalisation de tuberculosis? on P_1


#
# Sample code using this function
#

