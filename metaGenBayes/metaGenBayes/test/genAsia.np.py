################################################################################
# 2015-11-26 19:03:46 : genAsia.np.py generated from /home/phw/Documents/gits/lip6/metaGenBayes/metaGenBayes/test/config.yaml
#
# This file is generated by metaGenBayes 1.0.0 for numpy>1.10
#
# Do not make changes to this file unless you know what you are doing
# Please modify the configuration file (/home/phw/Documents/gits/lip6/metaGenBayes/metaGenBayes/test/config.yaml) instead.
################################################################################


import numpy as np

def getProbaForAsia(evs):
  res = {}
  P0sachant= [0.009999999776482582, 0.9900000095367432]
  P1sachant0= [[0.05000000074505806, 0.949999988079071], [0.009999999776482582, 0.9900000095367432]]
  P2sachant1_4= [[[1.0, 0.0], [1.0, 0.0]], [[1.0, 0.0], [0.0, 1.0]]]
  P3sachant2= [[0.9800000190734863, 0.019999999552965164], [0.05000000074505806, 0.949999988079071]]
  P4sachant5= [[0.10000000149011612, 0.8999999761581421], [0.009999999776482582, 0.9900000095367432]]
  P5sachant= [0.5, 0.5]
  P6sachant5= [[0.6000000238418579, 0.4000000059604645], [0.30000001192092896, 0.699999988079071]]
  P7sachant6_2= [[[0.8999999761581421, 0.10000000149011612], [0.699999988079071, 0.30000001192092896]], [[0.800000011920929, 0.20000000298023224], [0.10000000149011612, 0.8999999761581421]]]
# CPO XRLJQX [2, 3] 1.0
  XRLJQX=np.ones((2,2))
# CPO UMMWIA [2, 6, 7] 1.0
  UMMWIA=np.ones((2,2,2))
# CPO AULMMF [0, 1] 1.0
  AULMMF=np.ones((2,2))
# CPO KKSVMQ [1, 2, 4] 1.0
  KKSVMQ=np.ones((2,2,2))
# CPO FNITFL [2, 5, 6] 1.0
  FNITFL=np.ones((2,2,2))
# CPO FXSKAL [2, 4, 5] 1.0
  FXSKAL=np.ones((2,2,2))
# MUC AULMMF 0 [0, 1]
  for i0 in range(2):
    for i1 in range(2):
      AULMMF[i1][i0] *= P0sachant[i0]
# MUC AULMMF 1 [0, 1]
  for i0 in range(2):
    for i1 in range(2):
      AULMMF[i1][i0] *= P1sachant0[i0][i1]
# MUC KKSVMQ 2 [1, 2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        KKSVMQ[i2][i1][i0] *= P2sachant1_4[i0][i2][i1]
# MUC XRLJQX 3 [2, 3]
  for i0 in range(2):
    for i1 in range(2):
      XRLJQX[i1][i0] *= P3sachant2[i0][i1]
# MUC FXSKAL 4 [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        FXSKAL[i2][i1][i0] *= P4sachant5[i2][i1]
# MUC FNITFL 5 [2, 5, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        FNITFL[i2][i1][i0] *= P5sachant[i1]
# MUC FNITFL 6 [2, 5, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        FNITFL[i2][i1][i0] *= P6sachant5[i1][i2]
# MUC UMMWIA 7 [2, 6, 7]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        UMMWIA[i2][i1][i0] *= P7sachant6_2[i0][i1][i2]
# ASE smoking? EV_5 0 evs.get([5, 'smoking?'][1])
  EV_5= evs.get('smoking?')
# ASE visit_to_Asia? EV_0 0 evs.get([0, 'visit_to_Asia?'][1])
  EV_0= evs.get('visit_to_Asia?')
# ASE dyspnoea? EV_7 0 evs.get([7, 'dyspnoea?'][1])
  EV_7= evs.get('dyspnoea?')
# ASE positive_XraY? EV_3 0 evs.get([3, 'positive_XraY?'][1])
  EV_3= evs.get('positive_XraY?')
# MUL AULMMF EV_0 [0, 1] ['0']
  for i0 in range(2):
    for i1 in range(2):
      AULMMF[i1][i0] *= EV_0[i0]
# MUL XRLJQX EV_3 [2, 3] ['3']
  for i0 in range(2):
    for i1 in range(2):
      XRLJQX[i1][i0] *= EV_3[i1]
# MUL FNITFL EV_5 [2, 5, 6] ['5']
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        FNITFL[i2][i1][i0] *= EV_5[i1]
# MUL UMMWIA EV_7 [2, 6, 7] ['7']
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        UMMWIA[i2][i1][i0] *= EV_7[i2]
# CPO TJEEOY [2, 5, 6] 1.0
  TJEEOY=np.ones((2,2,2))
# MUL TJEEOY FNITFL [2, 5, 6] [2, 5, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        TJEEOY[i2][i1][i0] *= FNITFL[i2][i1][i0]
# CPO LTSUCT [2, 4, 5] 1.0
  LTSUCT=np.ones((2,2,2))
# MUL LTSUCT FXSKAL [2, 4, 5] [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        LTSUCT[i2][i1][i0] *= FXSKAL[i2][i1][i0]
# CPO BQMQRW [1, 2, 4] 1.0
  BQMQRW=np.ones((2,2,2))
# MUL BQMQRW KKSVMQ [1, 2, 4] [1, 2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        BQMQRW[i2][i1][i0] *= KKSVMQ[i2][i1][i0]
# CPO QLSOCE [2, 4, 5] 1.0
  QLSOCE=np.ones((2,2,2))
# MUL QLSOCE FXSKAL [2, 4, 5] [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        QLSOCE[i2][i1][i0] *= FXSKAL[i2][i1][i0]
# CPO YXKTCO [2, 6] 0.0
  YXKTCO=np.zeros((2,2))
# MAR YXKTCO UMMWIA [2, 6] [2, 6, 7]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        YXKTCO[i1][i0] += UMMWIA[j0][i1][i0]
# MUL FNITFL YXKTCO [2, 5, 6] [2, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        FNITFL[i2][i1][i0] *= YXKTCO[i2][i0]
# CPO WIWEAX [1] 0.0
  WIWEAX=np.zeros((2))
# MAR WIWEAX AULMMF [1] [0, 1]
  for i0 in range(2):
    for j0 in range(2):
      WIWEAX[i0] += AULMMF[i0][j0]
# MUL KKSVMQ WIWEAX [1, 2, 4] [1]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        KKSVMQ[i2][i1][i0] *= WIWEAX[i0]
# CPO AIGVHA [2, 4] 0.0
  AIGVHA=np.zeros((2,2))
# MAR AIGVHA KKSVMQ [2, 4] [1, 2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        AIGVHA[i1][i0] += KKSVMQ[i1][i0][j0]
# MUL FXSKAL AIGVHA [2, 4, 5] [2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        FXSKAL[i2][i1][i0] *= AIGVHA[i1][i0]
# CPO LQDWOB [2, 5] 0.0
  LQDWOB=np.zeros((2,2))
# MAR LQDWOB FXSKAL [2, 5] [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        LQDWOB[i1][i0] += FXSKAL[i1][j0][i0]
# MUL FNITFL LQDWOB [2, 5, 6] [2, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        FNITFL[i2][i1][i0] *= LQDWOB[i1][i0]
# CPO WVWZTW [2] 0.0
  WVWZTW=np.zeros((2))
# MAR WVWZTW XRLJQX [2] [2, 3]
  for i0 in range(2):
    for j0 in range(2):
      WVWZTW[i0] += XRLJQX[j0][i0]
# MUL FNITFL WVWZTW [2, 5, 6] [2]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        FNITFL[i2][i1][i0] *= WVWZTW[i0]
# MUL TJEEOY YXKTCO [2, 5, 6] [2, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        TJEEOY[i2][i1][i0] *= YXKTCO[i2][i0]
# MUL TJEEOY WVWZTW [2, 5, 6] [2]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        TJEEOY[i2][i1][i0] *= WVWZTW[i0]
# CPO VSRXJO [2, 5] 0.0
  VSRXJO=np.zeros((2,2))
# MAR VSRXJO TJEEOY [2, 5] [2, 5, 6]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        VSRXJO[i1][i0] += TJEEOY[j0][i1][i0]
# MUL LTSUCT VSRXJO [2, 4, 5] [2, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        LTSUCT[i2][i1][i0] *= VSRXJO[i2][i0]
# CPO BECBSI [2, 4] 0.0
  BECBSI=np.zeros((2,2))
# MAR BECBSI LTSUCT [2, 4] [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        BECBSI[i1][i0] += LTSUCT[j0][i1][i0]
# MUL BQMQRW BECBSI [1, 2, 4] [2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        BQMQRW[i2][i1][i0] *= BECBSI[i2][i1]
# MUL BQMQRW WIWEAX [1, 2, 4] [1]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        BQMQRW[i2][i1][i0] *= WIWEAX[i0]
# MUL QLSOCE AIGVHA [2, 4, 5] [2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        QLSOCE[i2][i1][i0] *= AIGVHA[i1][i0]
# MUL QLSOCE VSRXJO [2, 4, 5] [2, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        QLSOCE[i2][i1][i0] *= VSRXJO[i2][i0]
# CPO ZWDGIS ['6'] 0.0
  ZWDGIS=np.zeros((2))
# MAR ZWDGIS FNITFL [6] [2, 5, 6]
  for i0 in range(2):
    for j0 in range(2):
      for j1 in range(2):
        ZWDGIS[i0] += FNITFL[i0][j1][j0]
# NOR ZWDGIS bronchitis?
  sum = 0.0
  for i0 in range(len(ZWDGIS)):
    sum +=ZWDGIS[i0]
  for i0 in range(len(ZWDGIS)):
    ZWDGIS[i0]/=sum
  res['bronchitis?']=np.copy(ZWDGIS[:])
# CPO GWBBCZ ['1'] 0.0
  GWBBCZ=np.zeros((2))
# MAR GWBBCZ BQMQRW [1] [1, 2, 4]
  for i0 in range(2):
    for j0 in range(2):
      for j1 in range(2):
        GWBBCZ[i0] += BQMQRW[j1][j0][i0]
# NOR GWBBCZ tuberculosis?
  sum = 0.0
  for i0 in range(len(GWBBCZ)):
    sum +=GWBBCZ[i0]
  for i0 in range(len(GWBBCZ)):
    GWBBCZ[i0]/=sum
  res['tuberculosis?']=np.copy(GWBBCZ[:])
# CPO VKEFBZ ['4'] 0.0
  VKEFBZ=np.zeros((2))
# MAR VKEFBZ QLSOCE [4] [2, 4, 5]
  for i0 in range(2):
    for j0 in range(2):
      for j1 in range(2):
        VKEFBZ[i0] += QLSOCE[j1][i0][j0]
# NOR VKEFBZ lung_cancer?
  sum = 0.0
  for i0 in range(len(VKEFBZ)):
    sum +=VKEFBZ[i0]
  for i0 in range(len(VKEFBZ)):
    VKEFBZ[i0]/=sum
  res['lung_cancer?']=np.copy(VKEFBZ[:])
# CPO MQWEIP [2, 3] 1.0
  MQWEIP=np.ones((2,2))
# CPO HVMCZA [2, 6, 7] 1.0
  HVMCZA=np.ones((2,2,2))
# CPO NWGOAP [0, 1] 1.0
  NWGOAP=np.ones((2,2))
# CPO ECNISL [1, 2, 4] 1.0
  ECNISL=np.ones((2,2,2))
# CPO OYXWGD [2, 5, 6] 1.0
  OYXWGD=np.ones((2,2,2))
# CPO DDETAX [2, 4, 5] 1.0
  DDETAX=np.ones((2,2,2))
# MUC NWGOAP 0 [0, 1]
  for i0 in range(2):
    for i1 in range(2):
      NWGOAP[i1][i0] *= P0sachant[i0]
# MUC NWGOAP 1 [0, 1]
  for i0 in range(2):
    for i1 in range(2):
      NWGOAP[i1][i0] *= P1sachant0[i0][i1]
# MUC ECNISL 2 [1, 2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        ECNISL[i2][i1][i0] *= P2sachant1_4[i0][i2][i1]
# MUC MQWEIP 3 [2, 3]
  for i0 in range(2):
    for i1 in range(2):
      MQWEIP[i1][i0] *= P3sachant2[i0][i1]
# MUC DDETAX 4 [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        DDETAX[i2][i1][i0] *= P4sachant5[i2][i1]
# MUC OYXWGD 5 [2, 5, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        OYXWGD[i2][i1][i0] *= P5sachant[i1]
# MUC OYXWGD 6 [2, 5, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        OYXWGD[i2][i1][i0] *= P6sachant5[i1][i2]
# MUC HVMCZA 7 [2, 6, 7]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        HVMCZA[i2][i1][i0] *= P7sachant6_2[i0][i1][i2]
# ASE smoking? EV_5 0 evs.get([5, 'smoking?'][1])
  EV_5= evs.get('smoking?')
# ASE visit_to_Asia? EV_0 0 evs.get([0, 'visit_to_Asia?'][1])
  EV_0= evs.get('visit_to_Asia?')
# ASE dyspnoea? EV_7 0 evs.get([7, 'dyspnoea?'][1])
  EV_7= evs.get('dyspnoea?')
# ASE positive_XraY? EV_3 0 evs.get([3, 'positive_XraY?'][1])
  EV_3= evs.get('positive_XraY?')
# MUL NWGOAP EV_0 [0, 1] ['0']
  for i0 in range(2):
    for i1 in range(2):
      NWGOAP[i1][i0] *= EV_0[i0]
# MUL MQWEIP EV_3 [2, 3] ['3']
  for i0 in range(2):
    for i1 in range(2):
      MQWEIP[i1][i0] *= EV_3[i1]
# MUL OYXWGD EV_5 [2, 5, 6] ['5']
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        OYXWGD[i2][i1][i0] *= EV_5[i1]
# MUL HVMCZA EV_7 [2, 6, 7] ['7']
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        HVMCZA[i2][i1][i0] *= EV_7[i2]
# CPO GTFRTY [2, 5, 6] 1.0
  GTFRTY=np.ones((2,2,2))
# MUL GTFRTY OYXWGD [2, 5, 6] [2, 5, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        GTFRTY[i2][i1][i0] *= OYXWGD[i2][i1][i0]
# CPO DAJALT [2, 4, 5] 1.0
  DAJALT=np.ones((2,2,2))
# MUL DAJALT DDETAX [2, 4, 5] [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        DAJALT[i2][i1][i0] *= DDETAX[i2][i1][i0]
# CPO ZMAEJJ [1, 2, 4] 1.0
  ZMAEJJ=np.ones((2,2,2))
# MUL ZMAEJJ ECNISL [1, 2, 4] [1, 2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        ZMAEJJ[i2][i1][i0] *= ECNISL[i2][i1][i0]
# CPO ZHYSND [2, 4, 5] 1.0
  ZHYSND=np.ones((2,2,2))
# MUL ZHYSND DDETAX [2, 4, 5] [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        ZHYSND[i2][i1][i0] *= DDETAX[i2][i1][i0]
# CPO XHHWNV [2, 6] 0.0
  XHHWNV=np.zeros((2,2))
# MAR XHHWNV HVMCZA [2, 6] [2, 6, 7]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        XHHWNV[i1][i0] += HVMCZA[j0][i1][i0]
# MUL OYXWGD XHHWNV [2, 5, 6] [2, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        OYXWGD[i2][i1][i0] *= XHHWNV[i2][i0]
# CPO EZMEOV [1] 0.0
  EZMEOV=np.zeros((2))
# MAR EZMEOV NWGOAP [1] [0, 1]
  for i0 in range(2):
    for j0 in range(2):
      EZMEOV[i0] += NWGOAP[i0][j0]
# MUL ECNISL EZMEOV [1, 2, 4] [1]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        ECNISL[i2][i1][i0] *= EZMEOV[i0]
# CPO UHRKMD [2, 4] 0.0
  UHRKMD=np.zeros((2,2))
# MAR UHRKMD ECNISL [2, 4] [1, 2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        UHRKMD[i1][i0] += ECNISL[i1][i0][j0]
# MUL DDETAX UHRKMD [2, 4, 5] [2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        DDETAX[i2][i1][i0] *= UHRKMD[i1][i0]
# CPO WXGSOH [2, 5] 0.0
  WXGSOH=np.zeros((2,2))
# MAR WXGSOH DDETAX [2, 5] [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        WXGSOH[i1][i0] += DDETAX[i1][j0][i0]
# MUL OYXWGD WXGSOH [2, 5, 6] [2, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        OYXWGD[i2][i1][i0] *= WXGSOH[i1][i0]
# CPO YHIMPI [2] 0.0
  YHIMPI=np.zeros((2))
# MAR YHIMPI MQWEIP [2] [2, 3]
  for i0 in range(2):
    for j0 in range(2):
      YHIMPI[i0] += MQWEIP[j0][i0]
# MUL OYXWGD YHIMPI [2, 5, 6] [2]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        OYXWGD[i2][i1][i0] *= YHIMPI[i0]
# MUL GTFRTY XHHWNV [2, 5, 6] [2, 6]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        GTFRTY[i2][i1][i0] *= XHHWNV[i2][i0]
# MUL GTFRTY YHIMPI [2, 5, 6] [2]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        GTFRTY[i2][i1][i0] *= YHIMPI[i0]
# CPO LAMJDH [2, 5] 0.0
  LAMJDH=np.zeros((2,2))
# MAR LAMJDH GTFRTY [2, 5] [2, 5, 6]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        LAMJDH[i1][i0] += GTFRTY[j0][i1][i0]
# MUL DAJALT LAMJDH [2, 4, 5] [2, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        DAJALT[i2][i1][i0] *= LAMJDH[i2][i0]
# CPO PSUDCU [2, 4] 0.0
  PSUDCU=np.zeros((2,2))
# MAR PSUDCU DAJALT [2, 4] [2, 4, 5]
  for i0 in range(2):
    for i1 in range(2):
      for j0 in range(2):
        PSUDCU[i1][i0] += DAJALT[j0][i1][i0]
# MUL ZMAEJJ PSUDCU [1, 2, 4] [2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        ZMAEJJ[i2][i1][i0] *= PSUDCU[i2][i1]
# MUL ZMAEJJ EZMEOV [1, 2, 4] [1]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        ZMAEJJ[i2][i1][i0] *= EZMEOV[i0]
# MUL ZHYSND UHRKMD [2, 4, 5] [2, 4]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        ZHYSND[i2][i1][i0] *= UHRKMD[i1][i0]
# MUL ZHYSND LAMJDH [2, 4, 5] [2, 5]
  for i0 in range(2):
    for i1 in range(2):
      for i2 in range(2):
        ZHYSND[i2][i1][i0] *= LAMJDH[i2][i0]
# CPO RBQRZV ['6'] 0.0
  RBQRZV=np.zeros((2))
# MAR RBQRZV OYXWGD [6] [2, 5, 6]
  for i0 in range(2):
    for j0 in range(2):
      for j1 in range(2):
        RBQRZV[i0] += OYXWGD[i0][j1][j0]
# NOR RBQRZV bronchitis?
  sum = 0.0
  for i0 in range(len(RBQRZV)):
    sum +=RBQRZV[i0]
  for i0 in range(len(RBQRZV)):
    RBQRZV[i0]/=sum
  res['bronchitis?']=np.copy(RBQRZV[:])
# CPO FOPPLG ['1'] 0.0
  FOPPLG=np.zeros((2))
# MAR FOPPLG ZMAEJJ [1] [1, 2, 4]
  for i0 in range(2):
    for j0 in range(2):
      for j1 in range(2):
        FOPPLG[i0] += ZMAEJJ[j1][j0][i0]
# NOR FOPPLG tuberculosis?
  sum = 0.0
  for i0 in range(len(FOPPLG)):
    sum +=FOPPLG[i0]
  for i0 in range(len(FOPPLG)):
    FOPPLG[i0]/=sum
  res['tuberculosis?']=np.copy(FOPPLG[:])
# CPO YRHFMC ['4'] 0.0
  YRHFMC=np.zeros((2))
# MAR YRHFMC ZHYSND [4] [2, 4, 5]
  for i0 in range(2):
    for j0 in range(2):
      for j1 in range(2):
        YRHFMC[i0] += ZHYSND[j1][i0][j0]
# NOR YRHFMC lung_cancer?
  sum = 0.0
  for i0 in range(len(YRHFMC)):
    sum +=YRHFMC[i0]
  for i0 in range(len(YRHFMC)):
    YRHFMC[i0]/=sum
  res['lung_cancer?']=np.copy(YRHFMC[:])
  return res


for k,v in getProbaForAsia({
    "smoking?" : [0,1],
    "visit_to_Asia?" : [1,0],
    "dyspnoea?": [1,1],
    "positive_XraY?" : [2,1]
    }).iterate():
  res=""
  print(k,v)

#as $var=>$proba) {
#echo($var." => ");
#foreach ($proba as $v=>$p)
#  echo("$v : $p | ");
#echo("
#");
#}
