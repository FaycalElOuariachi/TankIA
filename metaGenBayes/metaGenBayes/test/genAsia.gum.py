################################################################################
# 2016-02-01 20:41:36 : genAsia.gum.py generated from /home/phw/Documents/gits/lip6/metaGenBayes/metaGenBayes/test/config.yaml
#
# This file is generated by metaGenBayes 1.0.0 for pyAgrum (python>=3.4, pyAgrum>=0.9.2)
#
# Do not make changes to this file unless you know what you are doing
# Please modify the configuration file (/home/phw/Documents/gits/lip6/metaGenBayes/metaGenBayes/test/config.yaml) instead.
################################################################################

import pyAgrum as gum
import numpy as np

def getProbaForAsia(evs):
  res = {}
  v0 = gum.LabelizedVariable('visit_to_Asia?','visit_to_Asia?',2)
  v1 = gum.LabelizedVariable('tuberculosis?','tuberculosis?',2)
  v2 = gum.LabelizedVariable('tuberculos_or_cancer?','tuberculos_or_cancer?',2)
  v3 = gum.LabelizedVariable('positive_XraY?','positive_XraY?',2)
  v4 = gum.LabelizedVariable('lung_cancer?','lung_cancer?',2)
  v5 = gum.LabelizedVariable('smoking?','smoking?',2)
  v6 = gum.LabelizedVariable('bronchitis?','bronchitis?',2)
  v7 = gum.LabelizedVariable('dyspnoea?','dyspnoea?',2)
  P0sachant = gum.Potential()
  P0sachant.add(v0)
  P0sachant[:] = np.array([0.009999999776482582, 0.9900000095367432])
  P1sachant0 = gum.Potential()
  P1sachant0.add(v1)
  P1sachant0.add(v0)
  P1sachant0[:] = np.array([[0.05000000074505806, 0.949999988079071], [0.009999999776482582, 0.9900000095367432]])
  P2sachant1_4 = gum.Potential()
  P2sachant1_4.add(v2)
  P2sachant1_4.add(v4)
  P2sachant1_4.add(v1)
  P2sachant1_4[:] = np.array([[[1.0, 0.0], [1.0, 0.0]], [[1.0, 0.0], [0.0, 1.0]]])
  P3sachant2 = gum.Potential()
  P3sachant2.add(v3)
  P3sachant2.add(v2)
  P3sachant2[:] = np.array([[0.9800000190734863, 0.019999999552965164], [0.05000000074505806, 0.949999988079071]])
  P4sachant5 = gum.Potential()
  P4sachant5.add(v4)
  P4sachant5.add(v5)
  P4sachant5[:] = np.array([[0.10000000149011612, 0.8999999761581421], [0.009999999776482582, 0.9900000095367432]])
  P5sachant = gum.Potential()
  P5sachant.add(v5)
  P5sachant[:] = np.array([0.5, 0.5])
  P6sachant5 = gum.Potential()
  P6sachant5.add(v6)
  P6sachant5.add(v5)
  P6sachant5[:] = np.array([[0.6000000238418579, 0.4000000059604645], [0.30000001192092896, 0.699999988079071]])
  P7sachant6_2 = gum.Potential()
  P7sachant6_2.add(v7)
  P7sachant6_2.add(v6)
  P7sachant6_2.add(v2)
  P7sachant6_2[:] = np.array([[[0.8999999761581421, 0.10000000149011612], [0.699999988079071, 0.30000001192092896]], [[0.800000011920929, 0.20000000298023224], [0.10000000149011612, 0.8999999761581421]]])
  AYSGDI=gum.Potential()
  AYSGDI.add(2)
  AYSGDI.add(3)
  AYSGDI.fill(1.0)
  BRMBSS=gum.Potential()
  BRMBSS.add(2)
  BRMBSS.add(6)
  BRMBSS.add(7)
  BRMBSS.fill(1.0)
  FVUZPZ=gum.Potential()
  FVUZPZ.add(0)
  FVUZPZ.add(1)
  FVUZPZ.fill(1.0)
  HHDFBY=gum.Potential()
  HHDFBY.add(1)
  HHDFBY.add(2)
  HHDFBY.add(4)
  HHDFBY.fill(1.0)
  HPDJCG=gum.Potential()
  HPDJCG.add(2)
  HPDJCG.add(5)
  HPDJCG.add(6)
  HPDJCG.fill(1.0)
  IOSTXC=gum.Potential()
  IOSTXC.add(2)
  IOSTXC.add(4)
  IOSTXC.add(5)
  IOSTXC.fill(1.0)
  FVUZPZ.multiplicateBy(P0sachant)
  FVUZPZ.multiplicateBy(P1sachant0)
  HHDFBY.multiplicateBy(P2sachant1_4)
  AYSGDI.multiplicateBy(P3sachant2)
  IOSTXC.multiplicateBy(P4sachant5)
  HPDJCG.multiplicateBy(P5sachant)
  HPDJCG.multiplicateBy(P6sachant5)
  BRMBSS.multiplicateBy(P7sachant6_2)
  EV_5[:]=evs.get([5, 'smoking?'][1])
  EV_3[:]=evs.get([3, 'positive_XraY?'][1])
  EV_7[:]=evs.get([7, 'dyspnoea?'][1])
  EV_0[:]=evs.get([0, 'visit_to_Asia?'][1])
  FVUZPZ.multiplicateBy(EV_0)
  AYSGDI.multiplicateBy(EV_3)
  HPDJCG.multiplicateBy(EV_5)
  BRMBSS.multiplicateBy(EV_7)
  RLHXWU=gum.Potential()
  RLHXWU.add(2)
  RLHXWU.add(5)
  RLHXWU.add(6)
  RLHXWU.fill(1.0)
  RLHXWU.multiplicateBy(HPDJCG)
  HWJYTG=gum.Potential()
  HWJYTG.add(2)
  HWJYTG.add(4)
  HWJYTG.add(5)
  HWJYTG.fill(1.0)
  HWJYTG.multiplicateBy(IOSTXC)
  FDRGTB=gum.Potential()
  FDRGTB.add(1)
  FDRGTB.add(2)
  FDRGTB.add(4)
  FDRGTB.fill(1.0)
  FDRGTB.multiplicateBy(HHDFBY)
  HBWNBD=gum.Potential()
  HBWNBD.add(2)
  HBWNBD.add(4)
  HBWNBD.add(5)
  HBWNBD.fill(1.0)
  HBWNBD.multiplicateBy(IOSTXC)
  NGVXWD=gum.Potential()
  NGVXWD.add(2)
  NGVXWD.add(6)
  NGVXWD.fill(0.0)
  NGVXWD.marginalize(BRMBSS)
  HPDJCG.multiplicateBy(NGVXWD)
  QSPEOP=gum.Potential()
  QSPEOP.add(1)
  QSPEOP.fill(0.0)
  QSPEOP.marginalize(FVUZPZ)
  HHDFBY.multiplicateBy(QSPEOP)
  DCMJXV=gum.Potential()
  DCMJXV.add(2)
  DCMJXV.add(4)
  DCMJXV.fill(0.0)
  DCMJXV.marginalize(HHDFBY)
  IOSTXC.multiplicateBy(DCMJXV)
  YBYAAJ=gum.Potential()
  YBYAAJ.add(2)
  YBYAAJ.add(5)
  YBYAAJ.fill(0.0)
  YBYAAJ.marginalize(IOSTXC)
  HPDJCG.multiplicateBy(YBYAAJ)
  SHDINH=gum.Potential()
  SHDINH.add(2)
  SHDINH.fill(0.0)
  SHDINH.marginalize(AYSGDI)
  HPDJCG.multiplicateBy(SHDINH)
  RLHXWU.multiplicateBy(NGVXWD)
  RLHXWU.multiplicateBy(SHDINH)
  JTZYUB=gum.Potential()
  JTZYUB.add(2)
  JTZYUB.add(5)
  JTZYUB.fill(0.0)
  JTZYUB.marginalize(RLHXWU)
  HWJYTG.multiplicateBy(JTZYUB)
  ERUHVC=gum.Potential()
  ERUHVC.add(2)
  ERUHVC.add(4)
  ERUHVC.fill(0.0)
  ERUHVC.marginalize(HWJYTG)
  FDRGTB.multiplicateBy(ERUHVC)
  FDRGTB.multiplicateBy(QSPEOP)
  HBWNBD.multiplicateBy(DCMJXV)
  HBWNBD.multiplicateBy(JTZYUB)
  P_6=gum.Potential()
  P_6.add(6)
  P_6.fill(0.0)
  P_6.marginalize(HPDJCG)
  P_6.normalize()
  P_1=gum.Potential()
  P_1.add(1)
  P_1.fill(0.0)
  P_1.marginalize(FDRGTB)
  P_1.normalize()
  P_4=gum.Potential()
  P_4.add(4)
  P_4.fill(0.0)
  P_4.marginalize(HBWNBD)
  P_4.normalize()
  return res
# 
#  Sample code using this function
# 
